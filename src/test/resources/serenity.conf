webdriver {
  driver = chrome
  autodownload = true
  chrome.silentOutput = true
}
headless.mode = true
gecko.firefox.options = {"args": ["-headless"]}

serenity {
//  take.screenshots = FOR_FAILURES
  console {
    colors = true
    timestamp = true
  }
//  logging = verbose
}

report.customfields.ApplicationVersion = 1.2.3
report.customfields.environment = ${environment}
report.customfields.user = ${USER}
report.customfields.host = ${HOST}
report.customfields.order="ApplicationVersion,environment,user,host"

sysinfo {
  build = "${GITHUB_RUN_ID}"
  Test Run {
    Run By = "${GITHUB_ACTOR}"
    Java Version = "${java.version}"
  }
}

#
# Chrome options can be defined using the chrome.switches property
#
chrome.switches = """--start-maximized;--test-type;--no-sandbox;--ignore-certificate-errors;
                   --disable-popup-blocking;--disable-default-apps;--disable-extensions-file-access-check;
                   --incognito;--disable-infobars,--disable-gpu; --log-level=3; --disable-logging; --disable-in-process-stack-traces"""

#
# Two environments are configured here: one when the application is running locally, and one when we run the tests
# against the Heroku server.
# You can switch environments using the environment variable, e.g.
#   mvn verify -Denvironment=heroku
#
environment = local
environments {
  local {
    webdriver.base.url = "http://localhost:3000"
    api.base.url = "http://localhost:3000/api"
  }
  heroku {
    webdriver.base.url = "https://bdd-flyer.herokuapp.com"
    api.base.url = "https://bdd-flyer.herokuapp.com/api"
  }
}
rport.tagtypes=environment

#
# Shortcuts for the URLs of specific pages we want to open.
# When we use the '#' symbol for variable substitution, it also works for environment-specific variables.
#
pages {
  home = "#{webdriver.base.url}"
  registration = "#{webdriver.base.url}/register"
  my.accounts = "#{webdriver.base.url}/users"
  my.bookings = "#{webdriver.base.url}/bookings"
  book.flights = "#{webdriver.base.url}/search"
}
